Test ``7-base_geometry.txt`` for the ``7-base_geometry.py`` module

=========================
 Using ``7-base_geometry.py``
=========================

This file tests the class``BaseGeometry``.

Import
======

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Now test it:

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("integer", 48)
    >>> bg.integer_validator("payday", 2)
   
    >>> bg.integer_validator("name", "Dallas")
    Traceback (most recent call last):
    TypeError: name must be an integer

    >>> bg.integer_validator("age", 38)
    Traceback (most recent call last):
    ValueError: age must be greater than 0

    >>> bg.integer_validator("length", -6)
    Traceback (most recent call last):
    ValueError: length must be greater than 0

    >>> bg.integer_validator("", 8)

    >>> bg.integer_validator("payday", 3)
    Traceback (most recent call last):
    ValueError: payday must be greater than 0

    >>> bg.integer_validator("lister", [1, 2, 3])
    Traceback (most recent call last):
    TypeError: lister must be an integer

    >>> bg.integer_validator("payday")
    Traceback (most recent call last):
    TypeError: integer_validator() missing 1 required positional argument: 'value'

    >>> bg.integer_validator()
    Traceback (most recent call last):
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'